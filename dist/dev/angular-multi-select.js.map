{"version":3,"sources":["../../src/angular-multi-select.js"],"names":[],"mappings":"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","file":"angular-multi-select.js","sourcesContent":["var angular_multi_select = angular.module('angular-multi-select', [\n\t'angular-multi-select-utils',\n\t'angular-multi-select-engine',\n\t'angular-multi-select-constants',\n\t'angular-multi-select-styles-helper',\n\t'angular-multi-select-data-converter'\n]);\n\nangular_multi_select.directive('angularMultiSelect', [\n\t'$http',\n\t'$compile',\n\t'$timeout',\n\t'$templateCache',\n\t'angularMultiSelectUtils',\n\t'angularMultiSelectEngine',\n\t'angularMultiSelectConstants',\n\t'angularMultiSelectStylesHelper',\n\t'angularMultiSelectDataConverter',\n\tfunction ($http, $compile, $timeout, $templateCache, angularMultiSelectUtils, angularMultiSelectEngine, angularMultiSelectConstants, angularMultiSelectStylesHelper, angularMultiSelectDataConverter) {\n\t\t'use strict';\n\t\treturn {\n\t\t\trestrict: 'AE',\n\n\t\t\tscope: {\n\t\t\t\tinputModel: '=',\n\t\t\t\toutputModel: '='\n\t\t\t},\n\n\t\t\tlink: function ($scope, element, attrs) {\n\t\t\t\tvar template = $templateCache.get('angular-multi-select.tpl');\n\t\t\t\tvar content = $compile(template)($scope);\n\t\t\t\telement.append(content);\n\n\t\t\t\tvar self = {};\n\t\t\t\tvar amsu = new angularMultiSelectUtils();\n\n\t\t\t\t/*\n\t\t\t\t █████  ████████ ████████ ██████  ██ ██████  ██    ██ ████████ ███████ ███████\n\t\t\t\t██   ██    ██       ██    ██   ██ ██ ██   ██ ██    ██    ██    ██      ██\n\t\t\t\t███████    ██       ██    ██████  ██ ██████  ██    ██    ██    █████   ███████\n\t\t\t\t██   ██    ██       ██    ██   ██ ██ ██   ██ ██    ██    ██    ██           ██\n\t\t\t\t██   ██    ██       ██    ██   ██ ██ ██████   ██████     ██    ███████ ███████\n\t\t\t\t*/\n\t\t\t\t/*\n\t\t\t\t* Find out what are the properties names of the important bits\n\t\t\t\t* of the input data.\n\t\t\t\t*/\n\t\t\t\t$scope.ops = {\n\t\t\t\t\tDEBUG             : attrs.debug === \"true\" ? true : false,\n\t\t\t\t\tNAME              : attrs.name,\n\t\t\t\t\tMAX_CHECKED_LEAFS : parseInt(attrs.maxCheckedLeafs),\n\n\t\t\t\t\tID_PROPERTY       : attrs.idProperty,\n\t\t\t\t\tOPEN_PROPERTY     : attrs.openProperty,\n\t\t\t\t\tCHECKED_PROPERTY  : attrs.checkedProperty,\n\t\t\t\t\tCHILDREN_PROPERTY : attrs.childrenProperty\n\t\t\t\t};\n\t\t\t\t$scope.ops = amsu.sanitize_ops($scope.ops);\n\n\t\t\t\t/*\n\t\t\t\t * Set the directive's name as attribute. If it exists, it will be overriten with\n\t\t\t\t * the same value, else, it will be set with the autogenerated value. This is required\n\t\t\t\t * for the visibility code.\n\t\t\t\t */\n\t\t\t\telement.attr(\"name\", $scope.ops.NAME);\n\n\t\t\t\t/*\n\t\t\t\t * Find out if the input data should be threated in some special way.\n\t\t\t\t */\n\t\t\t\tself.do_not_check_data   = attrs.doNotCheckData   === \"true\" ? true : false;\n\t\t\t\tself.do_not_convert_data = attrs.doNotConvertData === \"true\" ? true : false;\n\n\t\t\t\t/*\n\t\t\t\t * Find out if the output data should be converted in some special way.\n\t\t\t\t */\n\t\t\t\tself.output_keys   = amsu.array_from_attr(attrs.outputKeys);\n\t\t\t\tself.output_type   = attrs.outputType   === undefined ? 'objects' : attrs.outputType;\n\t\t\t\tself.output_filter = attrs.outputFilter === undefined ? angularMultiSelectConstants.FIND_LEAFS : attrs.outputFilter;\n\n\t\t\t\t/*\n\t\t\t\t * Find out which field to use for the 'search' functionality.\n\t\t\t\t */\n\t\t\t\t$scope.search_field = attrs.searchField === undefined ? null : attrs.searchField;\n\n\t\t\t\t/*\n\t\t\t\t * Find out if something should be preselected.\n\t\t\t\t */\n\t\t\t\tself.preselect = amsu.array_from_attr(attrs.preselect);\n\n\t\t\t\t/*\n\t\t\t\t * Find out if some of the helpers should be hidden.\n\t\t\t\t */\n\t\t\t\t$scope.hide_helpers = amsu.array_from_attr(attrs.hideHelpers) || [];\n\n\t\t\t\t/*\n\t\t\t\t █████  ███    ███ ███████      ██████  ██████       ██ ███████  ██████ ████████ ███████\n\t\t\t\t██   ██ ████  ████ ██          ██    ██ ██   ██      ██ ██      ██         ██    ██\n\t\t\t\t███████ ██ ████ ██ ███████     ██    ██ ██████       ██ █████   ██         ██    ███████\n\t\t\t\t██   ██ ██  ██  ██      ██     ██    ██ ██   ██ ██   ██ ██      ██         ██         ██\n\t\t\t\t██   ██ ██      ██ ███████      ██████  ██████   █████  ███████  ██████    ██    ███████\n\t\t\t\t*/\n\t\t\t\tvar amse = new angularMultiSelectEngine($scope.ops);\n\t\t\t\tvar amssh = new angularMultiSelectStylesHelper($scope.ops, attrs);\n\t\t\t\tvar amsdc = new angularMultiSelectDataConverter($scope.ops);\n\t\t\t\t$scope.amse = amse;\n\t\t\t\t$scope.amssh = amssh;\n\n\t\t\t\t/*\n\t\t\t\t██    ██ ██ ███████ ██ ██████  ██ ██      ██ ████████ ██    ██\n\t\t\t\t██    ██ ██ ██      ██ ██   ██ ██ ██      ██    ██     ██  ██\n\t\t\t\t██    ██ ██ ███████ ██ ██████  ██ ██      ██    ██      ████\n\t\t\t\t ██  ██  ██      ██ ██ ██   ██ ██ ██      ██    ██       ██\n\t\t\t\t  ████   ██ ███████ ██ ██████  ██ ███████ ██    ██       ██\n\t\t\t\t*/\n\t\t\t\t$scope.open = false;\n\t\t\t\t$scope.onclick_listener = function (event) {\n\t\t\t\t\tif (!event.target) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!amsu.element_belongs_to_directive(event.target, $scope.ops.NAME)) {\n\t\t\t\t\t\t$scope.open = false;\n\t\t\t\t\t\t$scope.$apply();\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tdocument.addEventListener('click', $scope.onclick_listener);\n\n\t\t\t\t/*\n\t\t\t\t * Show the directive to the left/right and at the top/bottom\n\t\t\t\t * of the button itself, depending on the available space.\n\t\t\t\t */\n\t\t\t\t$scope.$watch('open', function (_new, _old) {\n\t\t\t\t\tif (_new !== true) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t$timeout(function () {\n\t\t\t\t\t\tamssh.transform_position(element);\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\t/*\n\t\t\t\t████████ ██     ██ ███████  █████  ██   ██ ███████\n\t\t\t\t   ██    ██     ██ ██      ██   ██ ██  ██  ██\n\t\t\t\t   ██    ██  █  ██ █████   ███████ █████   ███████\n\t\t\t\t   ██    ██ ███ ██ ██      ██   ██ ██  ██       ██\n\t\t\t\t   ██     ███ ███  ███████ ██   ██ ██   ██ ███████\n\t\t\t\t*/\n\n\t\t\t\t/*\n\t\t\t\t * Prevent the scroll event bubbling to the parents on the DOM.\n\t\t\t\t */\n\t\t\t\tamsu.prevent_scroll_bubbling(element[0].getElementsByClassName('ams-items')[0]);\n\n\t\t\t\t/*\n\t\t\t\t * Make keyboard navigation possible.\n\t\t\t\t */\n\t\t\t\t$scope.focused_index = -1;\n\t\t\t\t$scope.onkeypress_listener = function (event) {\n\t\t\t\t\tif ($scope.open === false) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar quit = amsu.process_kb_input(event, $scope);\n\n\t\t\t\t\t/*\n\t\t\t\t\t * If quit is false, recalculate the\n\t\t\t\t\t * scroll position of the items container.\n\t\t\t\t\t */\n\t\t\t\t\tif (!quit) {\n\t\t\t\t\t\tamsu.scroll_to_item(element);\n\t\t\t\t\t}\n\n\t\t\t\t};\n\t\t\t\tdocument.addEventListener('keydown', $scope.onkeypress_listener);\n\n\t\t\t\t/*\n\t\t\t\t██   ██ ███████ ██      ██████  ███████ ██████  ███████\n\t\t\t\t██   ██ ██      ██      ██   ██ ██      ██   ██ ██\n\t\t\t\t███████ █████   ██      ██████  █████   ██████  ███████\n\t\t\t\t██   ██ ██      ██      ██      ██      ██   ██      ██\n\t\t\t\t██   ██ ███████ ███████ ██      ███████ ██   ██ ███████\n\t\t\t\t*/\n\t\t\t\t/*\n\t\t\t\t * The 'reset_model' will be filled in with the first available\n\t\t\t\t * data from the input model and will be used when the 'reset'\n\t\t\t\t * function is triggered.\n\t\t\t\t */\n\t\t\t\t$scope.reset_model = null;\n\t\t\t\t$scope.reset       = function () {\n\t\t\t\t\tamse.insert($scope.reset_model);\n\n\t\t\t\t\tif (self.preselect !== undefined) {\n\t\t\t\t\t\tamse.check_node_by(self.preselect);\n\t\t\t\t\t}\n\n\t\t\t\t\t$scope.items = amse.get_visible_tree();\n\t\t\t\t};\n\n\t\t\t\t/*\n\t\t\t\t███████ ███████  █████  ██████   ██████ ██   ██\n\t\t\t\t██      ██      ██   ██ ██   ██ ██      ██   ██\n\t\t\t\t███████ █████   ███████ ██████  ██      ███████\n\t\t\t\t     ██ ██      ██   ██ ██   ██ ██      ██   ██\n\t\t\t\t███████ ███████ ██   ██ ██   ██  ██████ ██   ██\n\t\t\t\t*/\n\t\t\t\t$scope.search = \"\";\n\t\t\t\tself.search_promise = null;\n\t\t\t\t$scope.search_spinner_visible = false;\n\t\t\t\t$scope.$watch('search', function (_new, _old) {\n\t\t\t\t\tif (_new === _old && _new === \"\") {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif($scope.search_field === null) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t/*\n\t\t\t\t\t * This means that there was a search, but it was deleted\n\t\t\t\t\t * and now the normal tree should be repainted.\n\t\t\t\t\t */\n\t\t\t\t\tif (_new === \"\") {\n\t\t\t\t\t\tif (self.search_promise !== null) {\n\t\t\t\t\t\t\t$timeout.cancel(self.search_promise);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$scope.items = amse.get_visible_tree();\n\t\t\t\t\t\t$scope.search_spinner_visible = false;\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t/*\n\t\t\t\t\t * If the code execution gets here, it means that there is\n\t\t\t\t\t * a search that should be performed\n\t\t\t\t\t */\n\t\t\t\t\tif (self.search_promise !== null) {\n\t\t\t\t\t\t$timeout.cancel(self.search_promise);\n\t\t\t\t\t}\n\n\t\t\t\t\t$scope.search_spinner_visible = true;\n\t\t\t\t\tself.search_promise = $timeout(function (query) {\n\t\t\t\t\t\t//TODO: this needs a lot of improving. Maybe use lunar.js?\n\t\t\t\t\t\tvar filter = [];\n\t\t\t\t\t\tfilter.push({\n\t\t\t\t\t\t\tfield: $scope.search_field,\n\t\t\t\t\t\t\tquery: query\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\t$scope.items = amse.get_filtered_tree(filter);\n\t\t\t\t\t\t$scope.search_spinner_visible = false;\n\t\t\t\t\t}, 1500, true, _new);\n\t\t\t\t});\n\n\t\t\t\t/*\n\t\t\t\t ██████  ███    ██     ██████   █████  ████████  █████       ██████ ██   ██  █████  ███    ██  ██████  ███████\n\t\t\t\t██    ██ ████   ██     ██   ██ ██   ██    ██    ██   ██     ██      ██   ██ ██   ██ ████   ██ ██       ██\n\t\t\t\t██    ██ ██ ██  ██     ██   ██ ███████    ██    ███████     ██      ███████ ███████ ██ ██  ██ ██   ███ █████\n\t\t\t\t██    ██ ██  ██ ██     ██   ██ ██   ██    ██    ██   ██     ██      ██   ██ ██   ██ ██  ██ ██ ██    ██ ██\n\t\t\t\t ██████  ██   ████     ██████  ██   ██    ██    ██   ██      ██████ ██   ██ ██   ██ ██   ████  ██████  ███████\n\t\t\t\t*/\n\t\t\t\tamse.on_data_change_fn = function () {\n\t\t\t\t\t/*\n\t\t\t\t\t * Will be triggered every time the internal model data is changed.\n\t\t\t\t\t * That could happen on check/uncheck, for example.\n\t\t\t\t\t */\n\n\t\t\t\t\t$scope.stats = amse.get_stats();\n\t\t\t\t\t/*\n\t\t\t\t\t * Get the visible tree only once. Consecutive calls on un/check\n\t\t\t\t\t * will automatically propagate to the rendered tree.\n\t\t\t\t\t */\n\t\t\t\t\t$scope.items = amse.get_visible_tree();\n\n\t\t\t\t\tif ($scope.outputModel !== undefined) {\n\t\t\t\t\t\tvar checked_tree = amse.get_checked_tree(self.output_filter);\n\n\t\t\t\t\t\t/*\n\t\t\t\t\t\t * Remove internal (undeeded) data.\n\t\t\t\t\t\t */\n\t\t\t\t\t\tvar res = $scope.ops.DEBUG ? checked_tree : amsdc.to_external(checked_tree);\n\n\t\t\t\t\t\t/*\n\t\t\t\t\t\t * Convert the data to the desired output.\n\t\t\t\t\t\t */\n\t\t\t\t\t\tswitch (self.output_type) {\n\t\t\t\t\t\t\tcase angularMultiSelectConstants.OUTPUT_DATA_TYPE_OBJECTS:\n\t\t\t\t\t\t\t\tres = amsdc.to_array_of_objects(res, self.output_keys);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase angularMultiSelectConstants.OUTPUT_DATA_TYPE_ARRAYS:\n\t\t\t\t\t\t\t\tres = amsdc.to_array_of_arrays(res, self.output_keys);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase angularMultiSelectConstants.OUTPUT_DATA_TYPE_OBJECT:\n\t\t\t\t\t\t\t\tres = amsdc.to_object(res, self.output_keys);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase angularMultiSelectConstants.OUTPUT_DATA_TYPE_ARRAY:\n\t\t\t\t\t\t\t\tres = amsdc.to_array(res, self.output_keys);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase angularMultiSelectConstants.OUTPUT_DATA_TYPE_VALUE:\n\t\t\t\t\t\t\t\tres = amsdc.to_value(res, self.output_keys);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$scope.outputModel = res;\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t/*\n\t\t\t\t ██████  ███    ██     ██    ██ ██ ███████ ██    ██  █████  ██           ██████ ██   ██  █████  ███    ██  ██████  ███████\n\t\t\t\t██    ██ ████   ██     ██    ██ ██ ██      ██    ██ ██   ██ ██          ██      ██   ██ ██   ██ ████   ██ ██       ██\n\t\t\t\t██    ██ ██ ██  ██     ██    ██ ██ ███████ ██    ██ ███████ ██          ██      ███████ ███████ ██ ██  ██ ██   ███ █████\n\t\t\t\t██    ██ ██  ██ ██      ██  ██  ██      ██ ██    ██ ██   ██ ██          ██      ██   ██ ██   ██ ██  ██ ██ ██    ██ ██\n\t\t\t\t ██████  ██   ████       ████   ██ ███████  ██████  ██   ██ ███████      ██████ ██   ██ ██   ██ ██   ████  ██████  ███████\n\t\t\t\t*/\n\t\t\t\tamse.on_visual_change_fn = function () {\n\t\t\t\t\t/*\n\t\t\t\t\t * Will be triggered when a change that requires a visual change happende.\n\t\t\t\t\t * This is normaly on open/close actions.\n\t\t\t\t\t */\n\t\t\t\t\t$scope.items = amse.get_visible_tree();\n\t\t\t\t};\n\n\t\t\t\t/*\n\t\t\t\t███    ███  █████  ██ ███    ██\n\t\t\t\t████  ████ ██   ██ ██ ████   ██\n\t\t\t\t██ ████ ██ ███████ ██ ██ ██  ██\n\t\t\t\t██  ██  ██ ██   ██ ██ ██  ██ ██\n\t\t\t\t██      ██ ██   ██ ██ ██   ████\n\t\t\t\t*/\n\t\t\t\tself.init = function (data) {\n\t\t\t\t\tif (!Array.isArray(data)) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar checked_data  = self.do_not_check_data   ? data         : amsdc.check_prerequisites(data);\n\t\t\t\t\tvar internal_data = self.do_not_convert_data ? checked_data : amsdc.to_internal(checked_data);\n\n\t\t\t\t\tif ($scope.reset_model === null) {\n\t\t\t\t\t\t$scope.reset_model = internal_data;\n\t\t\t\t\t}\n\n\t\t\t\t\tamse.insert(internal_data);\n\n\t\t\t\t\tif (self.preselect !== undefined) {\n\t\t\t\t\t\tamse.check_node_by(self.preselect);\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t$scope.$watch('inputModel', function (_new, _old) {\n\t\t\t\t\t/*\n\t\t\t\t\t* The entry point of the directive. This monitors the input data and\n\t\t\t\t\t* decides when to populate the internal data model and how to do it.\n\t\t\t\t\t*/\n\t\t\t\t\tif (typeof(_new) === \"string\") {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tself.init(JSON.parse(_new));\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t$http.get(_new).then(function (response) {\n\t\t\t\t\t\t\t\tself.init(response.data);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.init(_new);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t$scope.$on('$destroy', function () {\n\t\t\t\t\tamse.remove_collection($scope.ops.NAME);\n\t\t\t\t\tdocument.removeEventListener('click', $scope.onclick_listener);\n\t\t\t\t\tdocument.removeEventListener('keydown', $scope.onkeypress_listener);\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t}\n]);\n"]}